---
description: React Component Rules
globs: ["**/*.tsx", "**/*.jsx"]
alwaysApply: false
---

# React Component Guidelines

## Component Structure
- Use functional components with hooks
- Keep components small and focused
- Use TypeScript interfaces for props
- Export default component at the end

## State Management
- Use useState for local state
- Use useEffect for side effects
- Use useCallback for event handlers
- Use useMemo for expensive computations

## Styling
- Use CSS modules or styled-components
- Avoid inline styles except for dynamic values
- Use semantic HTML elements
- Follow accessibility guidelines

## Example Component
```tsx
interface Props {
  title: string;
  onClick: () => void;
}

const MyComponent: React.FC<Props> = ({ title, onClick }) => {
  const [count, setCount] = useState(0);
  
  const handleClick = useCallback(() => {
    setCount(prev => prev + 1);
    onClick();
  }, [onClick]);
  
  return (
    <div>
      <h1>{title}</h1>
      <button onClick={handleClick}>
        Clicked {count} times
      </button>
    </div>
  );
};

export default MyComponent;
```